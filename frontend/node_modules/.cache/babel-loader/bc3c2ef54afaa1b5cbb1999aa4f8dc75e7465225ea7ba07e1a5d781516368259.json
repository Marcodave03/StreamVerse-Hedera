{"ast":null,"code":"var _jsxFileName = \"C:\\\\2. Code Repository\\\\200. Projects\\\\StreamVerse\\\\Hedera\\\\StreamVerse-Hedera\\\\frontend\\\\src\\\\components\\\\StreamerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StreamerPage = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [stream, setStream] = useState(null);\n  const videoRef = useRef(null);\n  const peerConnectionRef = useRef(null);\n  const [viewerCount, setViewerCount] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    peerConnectionRef.current = peerConnection;\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit(\"ice-candidate\", roomId, event.candidate);\n      }\n    };\n    peerConnection.onnegotiationneeded = async () => {\n      try {\n        const offer = await peerConnection.createOffer();\n        await peerConnection.setLocalDescription(offer);\n        socket.emit(\"offer\", roomId, offer);\n      } catch (error) {\n        console.error(\"Error creating or setting offer:\", error);\n      }\n    };\n    socket.on(\"answer\", async answer => {\n      try {\n        await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n      } catch (error) {\n        console.error(\"Error setting remote description:\", error);\n      }\n    });\n    socket.on(\"ice-candidate\", async candidate => {\n      try {\n        await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (error) {\n        console.error(\"Error adding received ICE candidate:\", error);\n      }\n    });\n    socket.emit(\"join-room\", roomId, \"streamer\");\n    socket.on(\"user-connected\", ({\n      id,\n      role\n    }) => {\n      console.log(`New user connected: ${id} as ${role}`);\n      if (role === \"watcher\") {\n        var _peerConnection$onneg;\n        (_peerConnection$onneg = peerConnection.onnegotiationneeded) === null || _peerConnection$onneg === void 0 ? void 0 : _peerConnection$onneg.call(peerConnection, new Event(\"negotiationneeded\"));\n      }\n      setViewerCount(prev => prev + 1);\n    });\n    socket.on(\"user-disconnected\", ({\n      id,\n      role\n    }) => {\n      console.log(`User disconnected: ${id} as ${role}`);\n      setViewerCount(prev => prev - 1);\n    });\n    socket.on(\"chat\", message => {\n      setMessages(prev => [...prev, message]);\n    });\n    return () => {\n      peerConnection.close();\n      peerConnectionRef.current = null;\n      socket.emit(\"stop-stream\", roomId);\n      socket.off(\"offer\");\n      socket.off(\"user-connected\");\n      socket.off(\"user-disconnected\");\n      socket.off(\"ice-candidate\");\n      socket.off(\"chat\");\n    };\n  }, [roomId]);\n  const onSubmit = e => {\n    e.preventDefault();\n    if (message.trim() === \"\") return;\n    setMessages(prev => [...prev, message]);\n    console.log(\"Sending message:\", message);\n    socket.emit(\"chat\", roomId, message);\n    setMessage(\"\");\n  };\n  const startStream = async () => {\n    if (!roomId) return;\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        audio: true,\n        video: true\n      });\n      setStream(stream);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n      stream.getTracks().forEach(track => {\n        var _peerConnectionRef$cu;\n        (_peerConnectionRef$cu = peerConnectionRef.current) === null || _peerConnectionRef$cu === void 0 ? void 0 : _peerConnectionRef$cu.addTrack(track, stream);\n      });\n      socket.emit(\"stream-started\", roomId);\n    } catch (error) {\n      console.error(\"Error accessing screen media.\", error);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [stream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Streaming in Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Viewers: \", viewerCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"2rem\",\n        alignItems: \"end\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          style: {\n            width: \"800px\",\n            height: \"450px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            maxWidth: \"150px\",\n            paddingBlock: \"8px\"\n          },\n          onClick: startStream,\n          children: \"Start Streaming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\",\n          maxWidth: \"50%\",\n          marginBlock: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"0.5rem\",\n            padding: \"0.5rem\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            maxHeight: \"200px\",\n            overflowY: \"auto\",\n            paddingBlock: \"8px\",\n            minWidth: \"400px\",\n            height: \"auto\"\n          },\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              paddingBlock: \"6px\",\n              paddingInline: \"4px\"\n            },\n            type: \"text\",\n            placeholder: \"Enter a message\",\n            onChange: e => setMessage(e.target.value),\n            value: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamerPage, \"G2PwRIPaSVltwm2/VllLv4zXLq8=\", false, function () {\n  return [useParams];\n});\n_c = StreamerPage;\nexport default StreamerPage;\nvar _c;\n$RefreshReg$(_c, \"StreamerPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","socket","jsxDEV","_jsxDEV","StreamerPage","_s","roomId","stream","setStream","videoRef","peerConnectionRef","viewerCount","setViewerCount","messages","setMessages","message","setMessage","peerConnection","RTCPeerConnection","iceServers","urls","current","onicecandidate","event","candidate","emit","onnegotiationneeded","offer","createOffer","setLocalDescription","error","console","on","answer","setRemoteDescription","RTCSessionDescription","addIceCandidate","RTCIceCandidate","id","role","log","_peerConnection$onneg","call","Event","prev","close","off","onSubmit","e","preventDefault","trim","startStream","navigator","mediaDevices","getDisplayMedia","audio","video","srcObject","getTracks","forEach","track","_peerConnectionRef$cu","addTrack","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","alignItems","flexDirection","ref","autoPlay","muted","width","height","maxWidth","paddingBlock","onClick","marginBlock","padding","border","borderRadius","maxHeight","overflowY","minWidth","map","index","paddingInline","type","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/2. Code Repository/200. Projects/StreamVerse/Hedera/StreamVerse-Hedera/frontend/src/components/StreamerPage.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport socket from \"../socket\";\r\n\r\nconst StreamerPage: React.FC = () => {\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n  const [stream, setStream] = useState<MediaStream | null>(null);\r\n  const videoRef = useRef<HTMLVideoElement | null>(null);\r\n  const peerConnectionRef = useRef<RTCPeerConnection | null>(null);\r\n  const [viewerCount, setViewerCount] = useState(0);\r\n  const [messages, setMessages] = useState<string[]>([]);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    const peerConnection = new RTCPeerConnection({\r\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n    });\r\n\r\n    peerConnectionRef.current = peerConnection;\r\n\r\n    peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.emit(\"ice-candidate\", roomId, event.candidate);\r\n      }\r\n    };\r\n\r\n    peerConnection.onnegotiationneeded = async () => {\r\n      try {\r\n        const offer = await peerConnection.createOffer();\r\n        await peerConnection.setLocalDescription(offer);\r\n        socket.emit(\"offer\", roomId, offer);\r\n      } catch (error) {\r\n        console.error(\"Error creating or setting offer:\", error);\r\n      }\r\n    };\r\n\r\n    socket.on(\"answer\", async (answer) => {\r\n      try {\r\n        await peerConnection.setRemoteDescription(\r\n          new RTCSessionDescription(answer)\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error setting remote description:\", error);\r\n      }\r\n    });\r\n\r\n    socket.on(\"ice-candidate\", async (candidate) => {\r\n      try {\r\n        await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\r\n      } catch (error) {\r\n        console.error(\"Error adding received ICE candidate:\", error);\r\n      }\r\n    });\r\n\r\n    socket.emit(\"join-room\", roomId, \"streamer\");\r\n\r\n    socket.on(\"user-connected\", ({ id, role }) => {\r\n      console.log(`New user connected: ${id} as ${role}`);\r\n      if (role === \"watcher\") {\r\n        peerConnection.onnegotiationneeded?.(new Event(\"negotiationneeded\"));\r\n      }\r\n      setViewerCount((prev) => prev + 1);\r\n    });\r\n\r\n    socket.on(\"user-disconnected\", ({ id, role }) => {\r\n      console.log(`User disconnected: ${id} as ${role}`);\r\n      setViewerCount((prev) => prev - 1);\r\n    });\r\n\r\n    socket.on(\"chat\", (message) => {\r\n      setMessages((prev) => [...prev, message]);\r\n    });\r\n\r\n    return () => {\r\n      peerConnection.close();\r\n      peerConnectionRef.current = null;\r\n      socket.emit(\"stop-stream\", roomId);\r\n      socket.off(\"offer\");\r\n      socket.off(\"user-connected\");\r\n      socket.off(\"user-disconnected\");\r\n      socket.off(\"ice-candidate\");\r\n      socket.off(\"chat\");\r\n    };\r\n  }, [roomId]);\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (message.trim() === \"\") return;\r\n    setMessages((prev) => [...prev, message]);\r\n    console.log(\"Sending message:\", message);\r\n    socket.emit(\"chat\", roomId, message);\r\n    setMessage(\"\");\r\n  };\r\n  const startStream = async () => {\r\n    if (!roomId) return;\r\n\r\n    try {\r\n      const stream = await navigator.mediaDevices.getDisplayMedia({\r\n        audio: true,\r\n        video: true,\r\n      });\r\n      setStream(stream);\r\n\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n\r\n      stream.getTracks().forEach((track) => {\r\n        peerConnectionRef.current?.addTrack(track, stream);\r\n      });\r\n      socket.emit(\"stream-started\", roomId);\r\n    } catch (error) {\r\n      console.error(\"Error accessing screen media.\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, [stream]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Streaming in Room: {roomId}</h2>\r\n      <p>Viewers: {viewerCount}</p>\r\n      <div style={{ display: \"flex\", gap: \"2rem\", alignItems: \"end\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            muted\r\n            style={{ width: \"800px\", height: \"450px\" }}\r\n          />\r\n          <button\r\n            style={{ maxWidth: \"150px\", paddingBlock: \"8px\" }}\r\n            onClick={startStream}\r\n          >\r\n            Start Streaming\r\n          </button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\",\r\n            maxWidth: \"50%\",\r\n            marginBlock: \"1rem\",\r\n          }}\r\n        >\r\n          <h3>Messages</h3>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: \"0.5rem\",\r\n              padding: \"0.5rem\",\r\n              border: \"1px solid #ccc\",\r\n              borderRadius: \"4px\",\r\n              maxHeight: \"200px\",\r\n              overflowY: \"auto\",\r\n              paddingBlock: \"8px\",\r\n              minWidth: \"400px\",\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            {messages.map((message, index) => (\r\n              <div key={index}>{message}</div>\r\n            ))}\r\n          </div>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              style={{ paddingBlock: \"6px\", paddingInline: \"4px\" }}\r\n              type=\"text\"\r\n              placeholder=\"Enter a message\"\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StreamerPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}